openapi: 3.0.3
info:
  title: Site Creation API
  version: 1.0.0
  description: API for creating user sites with templates

paths:
  /sites:
    post:
      summary: Create a new site
      operationId: createSite
      tags:
        - Sites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteRequest'
      responses:
        '201':
          description: Site created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSiteResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sites/{id}:
    patch:
      summary: Update an existing site
      operationId: updateSite
      tags:
        - Sites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteRequest'
      responses:
        '200':
          description: Site updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSiteResponse'
        '400':
          description: Invalid request or path parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ai/enrich:
    post:
      summary: Enrich some user provided info using AI
      operationId: enrichContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrichContentRequest'
      responses:
        '200':
          description: Content enriched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichContentResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /provision/healthcheck:
    post:
      summary: Run healthchecks on site's provision
      description: Returns whether a site is healthy or down
      operationId: provisionHealthcheck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthcheckProvisionRequest'
      responses:
        '200':
          description: Domain availability info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcheckProvisionResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /domain/check:
    post:
      summary: Checks domain availability
      description: Returns whether a domain is available or not
      operationId: checkDomain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDomainParams'
      responses:
        '200':
          description: Domain availability info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAvailability'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateSiteRequest:
      type: object
      properties:
        templateID:
          type: integer
          format: uint8
          example: 1
        userID:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        fields:
          type: object
          description: json object with all widgets and fields of a site
          additionalProperties: true
      required:
        - templateID
        - userID

    CreateSiteResponse:
      type: object
      properties:
        siteID:
          type: integer
          format: uint64
          example: 123456
      required:
        - siteID

    UpdateSiteRequest:
      type: object
      properties:
        templateID:
          type: integer
          format: uint8
          example: 2
        domainType:
          type: string
          enum: [DefaultDomain, SeparateDomain, BringYourDomain]
        domain:
          type: string
          example: "example.com"
        newStatus:
          type: string
          enum: [InCreation, AwaitingProvision, Created]
          example: "Created"
        fields:
          type: object
          additionalProperties: true
          example:
            title: "My Site"
            theme: "dark"
            customSetting:
              nested: true
              list: [ 1, 2, 3 ]
      required:
        - templateID

    UpdateSiteResponse:
      type: object
      properties:
        siteID:
          type: integer
          format: uint64
          example: 123456
      required:
        - siteID

    EnrichContentRequest:
      type: object
      properties:
        content:
          type: string
          example: "Some info about user"
      required:
        - content
        # TODO: add some metadata for AI to better understand what kind of enrichment to perform

    EnrichContentResponse:
      type: object
      properties:
        enriched:
          type: string
          example: "Some info about user enriched"
      required:
        - enriched

    CheckDomainParams:
      type: object
      properties:
        domain:
          type: string
      required:
        - domain

    HealthcheckProvisionRequest:
      type: object
      properties:
        siteID:
          type: integer
          format: uint64
          example: 101
      required:
        - siteID

    HealthcheckProvisionResponse:
      type: object
      properties:
        status:
          type: string
          enum: [Healthy, Unhealthy, NotProvisioned]
      required:
        - status

    DomainAvailability:
      type: object
      properties:
        available:
          type: boolean
          example: true
      required:
        - available

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "invalid request"
      required:
        - error